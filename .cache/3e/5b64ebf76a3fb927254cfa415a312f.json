{"id":"ioA1","dependencies":[{"name":"/actions-package-update/tsconfig.json","includedInParent":true,"mtime":1613630321000},{"name":"/actions-package-update/package.json","includedInParent":true,"mtime":1613631600123}],"generated":{"js":"\"use strict\";var t=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,\"__esModule\",{value:!0});const r=t(require(\"execa\"));class n{constructor(t){this.conf=t}async run(t=[]){const n=`git ${t.join(\" \")}`;return this.conf.logger.debug(`BEGIN ${n}`),r.default(\"git\",t,{cwd:this.conf.get(\"workingdir\")}).then(t=>{if(this.conf.logger.debug(`END   ${n}`),t.failed)throw new Error(`${n} failed`);return t})}async setup(t,r){return this.config(\"user.name\",t).then(()=>this.config(\"user.email\",r))}async config(t,r){return this.run([\"config\",t,r])}async fetch(t){return this.run([\"fetch\",\"--prune\",t])}async listBranches(){return(await this.run([\"branch\",\"-a\"])).stdout.split(/[\\r]?\\n/)}async currentBranch(){return(await this.run([\"rev-parse\",\"--abbrev-ref\",\"HEAD\"])).stdout.trim()}async checkout(t){return this.run([\"checkout\",t])}async checkoutWith(t){return this.run([\"checkout\",\"-b\",t])}async status(){return(await this.run([\"status\",\"--porcelain=v1\"])).stdout.split(/[\\r]?\\n/).filter(t=>t).map(t=>{return{x:t[0],y:t[1],path:t.substring(3)}})}async addAll(){return this.run([\"add\",\"--all\"])}async add(t){return this.run([\"add\",...t])}async commit(t){return this.run([\"commit\",\"-m\",t])}async push(t,r){return this.run([\"push\",t,r])}async remoteurl(t){return(await this.run([\"remote\",\"get-url\",\"--push\",t])).stdout.trim()}async deleteBranch(t){return this.run([\"branch\",\"-D\",t])}}exports.default=n;"},"sourceMaps":null,"error":null,"hash":"f83a6f3404ac24c547e74da937f5c8e4","cacheData":{"env":{}}}