{"id":"C9JJ","dependencies":[{"name":"/actions-package-update/tsconfig.json","includedInParent":true,"mtime":1613629465000},{"name":"/actions-package-update/package.json","includedInParent":true,"mtime":1613629617605}],"generated":{"js":"\"use strict\";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,\"__esModule\",{value:!0});const t=e(require(\"convict\")),a=e(require(\"convict-format-with-validator\")),o=e(require(\"pino\"));t.default.addFormats(a.default);const i=\"package-update/\",s=\"update dependencies\",d=t.default({workingdir:{default:\"./\",env:\"WORKING_DIR\"},token:{default:\"\",doc:\"GitHub Access Token.\",format:e=>{if(!e)throw new Error(\"must be set a GitHub Access Token.\")},env:\"GITHUB_TOKEN\",sensitive:!0},git:{username:{default:\"\",doc:\"specify the commit auther name.\",env:\"AUTHOR_NAME\",format:e=>{if(!e)throw new Error(\"must be set the commit auther name.\")},arg:\"username\"},useremail:{default:\"\",doc:\"specify the commit auther email.\",env:\"AUTHOR_EMAIL\",format:\"email\"},prefix:{default:i,doc:\"specify working branch prefix. default prefix is package-update/\",env:\"BRANCH_PREFIX\"},message:{default:s,doc:`specify the commit message. default message is ${s}`,env:\"COMMIT_MESSAGE\"},files:{default:\"\",doc:\"a space separated list of file that will be added to the commit. Leave empty to add all changes.\",env:\"COMMIT_FILES\"}},title:{default:s,doc:`specify the commit message. default message is ${s}`,env:\"PULL_REQUEST_TITLE\"},update:{default:\"ncu\",doc:\"specify the command for update. default command is ncu.\",env:\"UPDATE_COMMAND\"},shadows:{default:!1,doc:\"if you specify this option, shows shadow dependencies changes.\",env:\"WITH_SHADOWS\"},execute:{default:!1,doc:\"if you don't specify this option, allows you to test this application.\",env:\"EXECUTE\",format:Boolean},keep:{default:!1,doc:\"if you specify this option, keep working branch after all.\",env:\"KEEP\",format:Boolean},log:{level:{default:\"info\",env:\"LOG_LEVEL\"}}}),n={...d,logger:o.default({level:d.get(\"log\").level,prettyPrint:!0})};exports.default=n;"},"sourceMaps":null,"error":null,"hash":"663def09c764b2ec56d697eae39aee0d","cacheData":{"env":{}}}